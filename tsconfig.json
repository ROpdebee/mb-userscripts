// Aggregate project referencing all composite sub-projects, for use with `tsc`
// type checker and `ts-node`.
// NOTE: Only refer to this file via `tsconfig.json` in the root, otherwise it will
// use the wrong root directory.
{
    "extends": "./configs/tsconfig.base",
    // We'll also typecheck the config files in the root
    "files": [
        "./babel.config.cjs",
        "./jest.config.cjs",
        "./.eslintrc.cjs",
        "./src/.eslintrc.cjs"
    ],
    "include": [],
    // Specific compiler options necessary for `tsconfig-paths`. It expects the
    // path mapping in the root `tsconfig.json`, it cannot extract it from
    // referenced projects. These mappings do not have an impact on the
    // referenced projects though.
    "compilerOptions": {
        "noEmit": true,
        "baseUrl": "./",
        "paths": {
            "@lib/*": ["src/lib/*"],
            "@src/*": ["src/*"],
            "@test-utils/*": ["tests/unit/utils/*"]
        }
    },
    // Reference all sub-projects
    "references": [
        { "path": "./build" },
        { "path": "./src/lib" },
        { "path": "./src/mb_caa_dimensions" },
        { "path": "./src/mb_enhanced_cover_art_uploads" },
        { "path": "./src/mb_multi_external_links" },
        { "path": "./tests/unit/build" },
        { "path": "./tests/unit/lib" },
        { "path": "./tests/unit/mb_caa_dimensions" },
        { "path": "./tests/unit/mb_enhanced_cover_art_uploads" },
        { "path": "./tests/unit/utils" }
    ]
}
