---
name: build and test
on:
  workflow_dispatch:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Run ESLint
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up environment
        uses: ./.github/actions/setup

      - name: Run ESLint
        run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    name: Run TypeScript typechecker
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up environment
        uses: ./.github/actions/setup

      - name: Run tsc
        run: npm run typecheck

  build:
    runs-on: ubuntu-latest
    name: Build userscripts
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up environment
        uses: ./.github/actions/setup

      - name: Compile userscripts
        run: npm run build

      - name: Upload built userscripts as artifact
        uses: actions/upload-artifact@v2
        with:
          name: built-userscripts
          path: ./dist/

  test:
    runs-on: ubuntu-latest
    name: Run tests
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up environment
        uses: ./.github/actions/setup

      - name: Run jest
        run: npm run test
      - name: Upload coverage data
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage/lcov.info

  e2e-test:
    runs-on: ubuntu-latest
    name: Run E2E tests
    needs:
      # No use in running expensive E2E tests when any previous step fails.
      - lint
      - typecheck
      # We need the build artifacts
      - build
      - test
    strategy:
      matrix:
        browserProfile:
          - chrome:latest
          # Although MB supports Chrome 49 and above (and we do too), the
          # latest VM and TM versions only support Chrome 64 and up.
          - chrome:64.0
          - firefox:latest
          - firefox:52.0
        userscriptManager:
          - violentmonkey
          - tampermonkey
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Fetch previously-built userscripts from artifacts
        uses: actions/download-artifact@v2
        with:
          name: built-userscripts
          path: ./dist
      - name: Setup E2E docker environment
        # https://github.community/t/steps-in-parallel/16343/5
        # Launching browser image pulling and docker-compose in parallel to
        # save some time, as both of these steps can take >10s to complete.
        run: |
          launch_as() {
            local cmd_name=$1
            shift
            (time $@ || echo $cmd_name >> /tmp/fail.txt) 2>&1 > /tmp/$cmd_name.txt
          }

          launch_as pull_browser_image docker pull selenoid/${{ matrix.browserProfile }} &
          launch_as start_e2e_services docker-compose -f tests/e2e/docker/docker-compose.yml up --build -d &
          wait

          cat /tmp/pull_browser_image.txt
          cat /tmp/start_e2e_services.txt
          if [ -f /tmp/fail.txt ]; then
            cat /tmp/fail.txt
            exit 1
          fi
      - name: Set up environment
        uses: ./.github/actions/setup

      - name: Run CodeceptJS
        run: npm run test:e2e -- --steps --profile ${{ matrix.browserProfile }}/${{ matrix.userscriptManager }}

      # Actions artifact names cannot contain :, so we need to replace
      # them. There is no built in expression for that.
      - name: Generate artifact name
        id: artifact-name
        if: always()
        env:
          artifact_name: e2e-${{ matrix.browserProfile }}-${{ matrix.userscriptManager }}
        run:
          echo ::set-output name=artifact-name::${artifact_name/:/_}

      # Artifacts will be empty/missing if there was no failure, since Codecept
      # won't generate screenshots.
      - name: Upload E2E artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ steps.artifact-name.outputs.artifact-name }}
          path: ./tests/e2e/output/
          if-no-files-found: ignore
