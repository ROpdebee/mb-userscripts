---
name: deploy
on:
  workflow_call:
    inputs:
      test-result:
        description: Outcome of testing job
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy userscripts
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          # Fetch the whole repository history, as we need to check out an old
          # ref to compare compiled scripts from before and after the change.
          fetch-depth: 0
      - name: Set up environment
        uses: ./.github/actions/setup

      - name: Find out PR number and title
        id: active-pr
        uses: actions/github-script@v6
        with:
          script: |
            // Find PR that introduced this commit by searching the commit SHA
            // This works even for squashes and rebased merges
            const { GITHUB_SHA, GITHUB_REPOSITORY } = process.env;
            const resp = await github.rest.search.issuesAndPullRequests({
              q: `is:pr is:closed repo:${GITHUB_REPOSITORY} ${GITHUB_SHA}`
            });

            try {
              const prs = resp.data.items;
              if (!prs || !prs.length) {
                console.log('no PRs');
                return;
              }
              return {
                number: prs[0].number,
                title: prs[0].title,
                labels: prs[0].labels.map((label) => label.name),
                url: prs[0].html_url,
              };
            } catch (err) {
              console.error('Could not find PR number for commit!');
              console.error(err);
              return;
            }

      - name: Checkout second dist copy
        uses: actions/checkout@v3
        with:
          path: repoDist
          ref: dist
      - name: Setup second dist repo
        working-directory: repoDist
        run: |
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git config user.name 'GitHub Actions'
          git config push.default current
      
      # Skip the remainder of these steps if we're not in a PR
      - name: Delete preview branch, if any
        if: steps.active-pr.outputs.result
        working-directory: repoDist
        # Don't fail if the branch did not exist
        continue-on-error: true
        run: git push origin --delete "dist-preview-${{ fromJSON(steps.active-pr.outputs.result).number }}";

      - name: Deploy new userscript versions
        id: deploy-step
        if: inputs.test-result == 'success' && steps.active-pr.outputs.result
        env:
          PR_INFO: ${{ steps.active-pr.outputs.result }}
        run: npm run deploy repoDist

      - name: Report deployment status
        if: always() && steps.active-pr.outputs.result && steps.deploy-step.result != 'cancelled'
        env:
          PR_INFO: ${{ steps.active-pr.outputs.result }}
          TEST_RESULT: ${{ inputs.test-result }}
          DEPLOY_RESULT: ${{ steps.deploy-step.outcome }}
          DEPLOY_INFO: ${{ steps.deploy-step.outputs.deployment-info }}
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('./build/report-deploy.js');
            await script.reportDeploy({ github, context });
